Bibliotecas:
#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <string.h>
________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________
STDLIB.H:
Pausar        -> system("pause");
Limpar        -> system("cls");
Faz os dois   -> system("pause && cls");
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
MATH.H:
Elevado       -> pow(numero, elevado);
Raiz quadrada -> sqrt(numero);

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
STRING.H:
setbuf(stdin,NULL);            -> Limpa o teclado
gets(string);                  -> Tipo scanf
strlen(string);                -> Fala o tamanho da string
strcpy(string 2, string 1)     -> Copia a 1 string na 2
strcal(string 1, string 2)     -> Junta as 2
strcmp(string 1, string 2);    -> Compara as 2
fgets(string, tamanho, stdin); -> Tipo gets, mas lê arquivos 
fputs(string, stdout);         -> Escreve uma frase na tela 
fputs(string, nome do arquivo) -> Escreve em um arquivo
________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________
% Usado para cada tipo de dado:
char   -> %c
int    -> %d 
float  -> %f 
string -> %s

________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________
Operadores:
&& -> E
|| -> OU
!  -> NEGAÇÃO
== -> COMPARAÇÃO
++ -> ADIÇÃO DE 1
-- -> DIMINUI 1

________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________
Printf:
printf ("");
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Scanf:
scanf  ("");
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
If:
if(Expressão lógica)
{
    comando;
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
While:
while(condição)
{
    comando;
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Do-while:
do 
{
    comandos;
}(condição para continuar rodando);
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
For:
for(inicialização;condição;incremento)       Exemplo->       (i = 0; i < x; i++)
{
    comandos
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Switch:
switch(variável)
{
    case X:
        comando;
        break;
    default:
        comando;
        break;    
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Struct:
struct nome
{
    tipo1 nome1;
    tipo2 nome2
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Typedef:
typedef struct nome
{
    tipo1 nome1;
    tipo2 nome2
}Nome;
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Função:
Tipo Nome(Tipo Variável enviada pra função)
{
    comandos;
}
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Ponteiros:
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Alocação Dinâmica de Memória:
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Arquivos:
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Tads:
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Busca Sequencial:
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Busca Binária:
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Pilha:

É recomendado usar funções de maneira padronizada

Pilha* criaPilha();

void liberaPilha(Pilha* p);

int empilha(Pilha* p, int v);

int desempilha(Pilha* p, int* v);

int estahVazia(Pilha* p);

int estahCheia(Pilha* p);
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Fila:

É recomendado usar funções de maneira padronizada

Fila* criaFila();

void liberaFila(Fila* p);

int inserir(Fila* p, int v);

int retirar(Fila* p, int*v);

int estahVazia(Fila* p);

int estahCheia(Fila* p);
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Lista:

criar Lista;
limpar lista ;
inserir intem(última posição);
inserir item(por posição);
remover item(última posição);
Recuperar item(dado uma chave);
Recuperar item(por posição);
Contar número de itens;
Verificar se esta vazia;
Verificar se esta cheia;
Imprime lista;
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________